<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">{
    xoffset = -5;
    yoffset = -8;
    refireTime = 40;
    event_inherited();
    
    reloadTime = 40;
    unscopedDamage = 35;
    baseDamage = 45;
    maxDamage = 75;
    chargeTime = 105;
    hitDamage=baseDamage;
    maxAmmo = 0;
    ammoCount = maxAmmo;
    shot=false;
    t=0;
    if(golden)
    {
        normalSprite = RifleGoldS;
        recoilSprite = RifleGoldFS;
        reloadSprite = RifleGoldFRS;
    }
    else
    {
        normalSprite = RifleS;
        recoilSprite = RifleFS;
        reloadSprite = RifleFRS;
    }
    sprite_index = normalSprite;
    
    recoilTime = 15;
    recoilAnimLength = sprite_get_number(recoilSprite)/2
    recoilImageSpeed = recoilAnimLength/recoilTime

    longRecoilTime = 60;
    reloadAnimLength = sprite_get_number(reloadSprite)/2
    reloadImageSpeed = reloadAnimLength/(longRecoilTime);
    
    tracerAlpha = 0;
    
    SniperSnd = faudio_new_generator(SniperSndS);
    ImpactWorldSnd = faudio_new_generator(RifleWorldSndS);
    ImpactMetalSnd = faudio_new_generator(RifleMetalSndS);
    PowerShotSnd = faudio_new_generator(PowerShotSndS);
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
